
create database kodilla_course;
create user 'kodilla_user' identified with MYSQL_NATIVE_PASSWORD by 'kodilla_Pass123';
GRANT ALL PRIVILEGES ON kodilla_course.* to kodilla_user;
show TABLES;

CREATE TABLE USERS
(
    ID SERIAL PRIMARY KEY,
    FIRSTNAME VARCHAR(100),
    LASTNAME VARCHAR(100)
);

CREATE TABLE POSTS
(
    ID SERIAL PRIMARY KEY,
    USER_ID BIGINT UNSIGNED NOT NULL,
    BODY VARCHAR(1024),
    FOREIGN KEY (USER_ID) REFERENCES USERS(ID)
);

SELECT * FROM USERS;

INSERT INTO USERS (FIRSTNAME, LASTNAME)
VALUES ('John', 'Smith');

COMMIT;
INSERT INTO POSTS (USER_ID, BODY)
VALUES (1, 'This is my first post on this forum!');
COMMIT;
SELECT * FROM POSTS;

INSERT INTO USERS (FIRSTNAME, LASTNAME)
VALUES ('Zachary', 'Lee');

INSERT INTO USERS (FIRSTNAME, LASTNAME)
VALUES ('Stephanie', 'Kovalsky');

INSERT INTO USERS (FIRSTNAME, LASTNAME)
VALUES ('Thomas', 'Landgren');

INSERT INTO USERS (FIRSTNAME, LASTNAME)
VALUES ('John', 'Thomson');

INSERT INTO POSTS (USER_ID, BODY)
VALUES (2, 'This is my first post too!');

INSERT INTO POSTS (USER_ID, BODY)
VALUES (2, 'How are you?');

INSERT INTO POSTS (USER_ID, BODY)
VALUES (1, 'Quite good, thanks bro!');

INSERT INTO POSTS (USER_ID, BODY)
VALUES (4, 'Yo all! Here is Thomas!');

COMMIT;
SELECT * FROM USERS;
SELECT * FROM POSTS;

CREATE TABLE ISSUESLISTS
(
    ID SERIAL PRIMARY KEY,
    NAME VARCHAR(100)

);
CREATE TABLE ISSUES
(
    ID SERIAL PRIMARY KEY,
    ISSUESLIST_ID BIGINT UNSIGNED,
    FOREIGN KEY (ISSUESLIST_ID) REFERENCES ISSUESLISTS(ID),
    SUMMARY VARCHAR(100),
    DESCRIPTION VARCHAR(1024),
    USER_ID_ASSIGNATED_TO BIGINT UNSIGNED,
    FOREIGN KEY (USER_ID_ASSIGNATED_TO) REFERENCES USERS(ID)

);
INSERT INTO ISSUESLISTS (NAME) VALUES
                                   ('ToDo'),
                                   ('In progress'),
                                   ('Done');

COMMIT;
SELECT * FROM ISSUESLISTS;

INSERT INTO ISSUES (ISSUESLIST_ID, SUMMARY, DESCRIPTION, USER_ID_ASSIGNATED_TO) VALUES
        (1, 'Utworzyć strukturę bazy', 'Zaprojektować i stworzyć tabele w SQL', 1),
        (1, 'Dodać dane testowe', 'Wypełnić tabele przykładowymi rekordami', 2),
        (2, 'Napisać zapytania SELECT', 'Zrobić podstawowe zapytania', 1),
        (2, 'Przetestować relacje', 'Sprawdzić czy działa JOIN między tabelami', 3),
        (3, 'Zamknąć zadanie', 'Zadanie zostało zakończone pomyślnie', 2);

INSERT INTO ISSUES (ISSUESLIST_ID, SUMMARY, DESCRIPTION, USER_ID_ASSIGNATED_TO)
VALUES (3, 'Ostatnie zadanie', 'Uzupełnienie do 15 zadań', 1);

COMMIT;
SELECT * FROM ISSUES;

INSERT INTO ISSUES (ISSUESLIST_ID, SUMMARY, DESCRIPTION, USER_ID_ASSIGNATED_TO) VALUES
            (1, 'Sprawdzić strukturę', 'Weryfikacja połączeń między tabelami', 1),
            (1, 'Napisać testy', 'Utworzyć testy SQL dla constraints', 2),
            (1, 'Dodać użytkownika testowego', 'Do testowania relacji', 3),
            (2, 'Optymalizacja zapytań', 'Poprawa wydajności', 2),
            (2, 'Dodanie indeksów', 'Indeksy dla kolumn obcych', 1),
            (2, 'Dodanie widoków', 'Stworzyć widoki dla użytkowników', 3),
            (3, 'Zakończenie testów', 'Testy zakończone sukcesem', 1),
            (3, 'Utworzenie backupu', 'Backup struktury i danych', 2),
            (3, 'Przygotowanie dokumentacji', 'Opis bazy danych', 3);


COMMIT;

